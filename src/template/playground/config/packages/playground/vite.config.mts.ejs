import { fileURLToPath, URL } from 'node:url'

import { defineConfig, type UserConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import vueDevTools from 'vite-plugin-vue-devtools'

<%_ if (config.includeAtAliases) { _%>
const librarySrc = fileURLToPath(new URL('../<%- config.mainPackageDirName %>/src/', import.meta.url))
const playgroundSrc = fileURLToPath(new URL('./src/', import.meta.url))

<%_ } _%>
export default defineConfig(({ mode }): UserConfig => ({
  plugins: [
    vue(),
    vueDevTools()
  ],
  resolve: {
    <%_ if (config.includeAtAliases) { _%>
    alias: [
      {
        find: '@',
        replacement: '@',
        customResolver(source, importer) {
          return source.replace(
            /^@\//,
            importer?.startsWith(librarySrc) ? librarySrc : playgroundSrc
          )
        }
      }, {
        find: '<%- config.scopedPackageName %>',
        replacement: librarySrc
      }
    ]
    <%_ } else { _%>
    alias: {
      '<%- config.scopedPackageName %>': fileURLToPath(new URL('../<%- config.mainPackageDirName %>/src/', import.meta.url))
    }
    <%_ } _%>
  },
  define: {
    __DEV__: mode !== 'production'<%_ if (config.includeTestVariable) { _%>,
    __TEST__: false
    <%_ } %>
  }
}))
