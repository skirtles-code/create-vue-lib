import { resolve } from 'node:path'

import { defineConfigWithTheme } from 'vitepress'

export default ({ mode }: { mode: string }) => defineConfigWithTheme({
  srcDir: './src',
  outDir: './dist',
  base: '<%- config.docsBase %>',
  title: '<%- config.scopedPackageName %>',
  lang: 'en-US',
  description: 'Description',
  cleanUrls: true,

  <%_ if (config.githubPagesOrigin) { _%>
  sitemap: {
    hostname: '<%- config.githubPagesOrigin  %><%- config.docsBase %>'
  },

  transformHead({ page}) {
    if (page !== '404.md') {
      const canonicalUrl = `<%- config.githubPagesOrigin  %><%- config.docsBase %>${page}`
        .replace(/index\.md$/, '')
        .replace(/\.md$/, '')

      return [['link', { rel: 'canonical', href: canonicalUrl }]]
    }
  },

  <%_ } _%>
  vite: {
    resolve: {
      alias: {
        '<%- config.scopedPackageName %>': resolve(__dirname, '../../<%- config.mainPackageDirName %>/src/index.ts')
      }
    },

    define: {
      __DEV__: JSON.stringify(mode !== 'production')
    },

    server: {
      fs: {
        allow: [
          '..',
          '../../<%- config.mainPackageDirName %>/src'
        ]
      }
    }
  },

  themeConfig: {
    search: {
      provider: 'local'
    },

    nav: [
      { text: 'Guide', link: '/introduction' }
    ],

    <%_ if (config.githubUrl) { _%>
    socialLinks: [
      { icon: 'github', link: '<%- config.githubUrl %>' }
    ],

    <%_ } _%>
    sidebar: [
      {
        text: 'Getting started',
        items: [
          {
            text: 'Introduction',
            link: '/introduction'
          }
        ]
      }
    ]
  }
})
